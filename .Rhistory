community_type = rep('Fungi', ncol(fung_data$data_loaded_filt)))
allData = data.frame()
allData = rbind(allData, melt(fung_data_w_md))
fung_data$data_loaded_filt = filter_taxa(fung_data$data_loaded, filter_thresh=0.01)
fung_data_w_md = cbind(t(fung_data$data_loaded_filt),
select(fung_data$map_loaded, site_code, nutrient_trt),
community_type = rep('Fungi', ncol(fung_data$data_loaded_filt)))
allData = rbind(allData, melt(fung_data_w_md))
fp = '/Users/leffj/Dropbox/nutnet/NutNet_microbe_nutrient/fung_taxa.txt'
taxa = read.table(fp, header=TRUE, sep='\t')
View(taxa)
View(taxa)
taxa = gsub('k__.*p__', '', taxa)
taxa
taxa = gsub('k__Fungi; p__', '', taxa)
taxa = read.table(fp, header=TRUE, sep='\t')
taxa = gsub('k__Fungi; p__', '', taxa)
taxa
taxa = read.table(fp, header=TRUE, sep='\t')
taxa$taxonomy = gsub('k__Fungi', '', taxa$taxonomy)
View(taxa)
taxa$taxonomy = gsub('k__Fungi.*p__', '', taxa$taxonomy)
taxa = read.table(fp, header=TRUE, sep='\t')
taxa$taxonomy = gsub('k__Fungi.*p__', '', taxa$taxonomy)
View(taxa)
taxa$taxonomy = gsub('Glomeromycota.*', 'Glomeromycota', taxa$taxonomy)
View(taxa)
taxa_glomero = filter(taxa, taxonomy=='Glomeromycota')
View(taxa_glomero)
fung_data$data_loaded_filt = filter_taxa(fung_data$data_loaded, filter_thresh=0.01)
colnames(fung_data$data_loaded)
row.names(fung_data$data_loaded)
row.names(fung_data$data_loaded) %in% taxa_glomero$OTU.ID
row.names(fung_data$data_loaded_filt) %in% taxa_glomero$OTU.ID
fung_data$data_loaded_filt[row.names(fung_data$data_loaded_filt) %in% taxa_glomero$OTU.ID, ]
glomero_tab = fung_data$data_loaded_filt[
row.names(fung_data$data_loaded_filt) %in% taxa_glomero$OTU.ID, ]
fung_data_w_md = cbind(t(glomero_tab),
select(fung_data$map_loaded, site_code, nutrient_trt),
community_type = rep('Fungi', ncol(glomero_tab)))
allData = data.frame()
allData = rbind(allData, melt(fung_data_w_md))
allData_controls = filter(allData, nutrient_trt == 'Control')
valuesBySite_controls = summarize(group_by(allData_controls, community_type, variable,
site_code),
rel_abund = mean(value))
# get pct dif from control for each site/ctype
# need to create lookup key to get right control values
valuesBySite_controls = mutate(valuesBySite_controls, lookup=paste(community_type, site_code, variable, sep=';'))
allData = mutate(allData, lookup=paste(community_type, site_code, variable, sep=';'))
allData = mutate(allData, pct_dif =
(value - valuesBySite_controls[match(lookup, valuesBySite_controls$lookup),'rel_abund'])/
valuesBySite_controls[match(lookup, valuesBySite_controls$lookup),'rel_abund']*100)
# mean values by site
allData.means = summarize(group_by(allData, community_type, site_code, variable, nutrient_trt),
mean_pct_dif = mean(pct_dif))
allData.means$nutrient_trt = ordered(allData.means$nutrient_trt, c('Control','N','P','NP'))
toPlot = filter(allData.means, nutrient_trt == 'NP')
toPlot$variable = gsub("k__.*;p__", "", toPlot$variable)
toPlot$variable = gsub("Proteo.*;c__", "", toPlot$variable)
# toPlot = allData.means
# plot all together
ggplot(toPlot, aes(variable, mean_pct_dif)) +
geom_hline(aes(yintercept=0),linetype=2) +
geom_boxplot(outlier.size=0, fill='white') +
geom_jitter(position=position_jitter(w=0.1),size=3,alpha=0.8) +
facet_wrap(~community_type, scales='free', nrow=2) +
theme_bw() +
theme(panel.grid=element_blank(), legend.position='none',
axis.text.x=element_text(angle=90, vjust=0.5, hjust=1)) +
ylab("% difference from contol") + xlab('')
View(allData.means)
filter(allData.means, nutrient_trt=='NP', mean_pct_dif!=NaN)
filter(allData.means, nutrient_trt=='NP')
smry = filter(allData.means, nutrient_trt=='NP'), mean_pct_dif!=NaN)
smry = filter(allData.means, nutrient_trt=='NP')
smry = filter(allData.means, nutrient_trt=='NP', mean_pct_dif!=NaN)
View(smry)
smry = filter(allData.means, nutrient_trt=='NP', mean_pct_dif==NaN)
smry = filter(allData.means, nutrient_trt=='NP', mean_pct_dif!='NaN')
View(smry)
View(smry)
dcast(smry, formula=sit_code~variable)
dcast(smry, formula=site_code~variable)
dcast(smry, formula=variable~site_code)
smry_cast = dcast(smry, formula=variable~site_code)
smry_cast = dcast(smry, formula=variable~site_code, value.var=mean_pct_div)
smry_cast = dcast(smry, formula=variable~site_code, value.var=mean_pct_dif)
smry_cast = dcast(smry, formula=variable~site_code, value.var='mean_pct_dif')
smry_cast
fp = '/Users/leffj/Dropbox/nutnet/NutNet_microbe_nutrient/drivers_of_response/glomeromycota/glomeros_resluts.csv'
write.csv(smry_cast, fp, row.names=F)
library(reshape2)
library(ggplot2)
source('~/software/micro_community_analysis_tools/routine_analysis_functions.R')
######################################
# get mean dissim b/t each nutrient  #
#   treated sample and control plots #
#   within a site                    #
######################################
map_fp = '/Users/leffj/Dropbox/NutNet/NutNet_microbe_nutrient/metadata_sampling_year_noNN10.txt'
# load and process bact data
bact_dm_fp = '/Users/leffj/Dropbox/nutnet/NutNet_microbe_nutrient/beta_div/sqrt_bray_curtis_otu_table_k__Bacteria_18000.txt'
bact_data = load_dm(bact_dm_fp, map_fp)
bact_diss = get_mean_dissimilarities(bact_data, comparison_cat="nutrient_trt", within_cat="site_code",
comparison_cat_val='Control__NP')
# load and process fung data
fung_dm_fp = '/Users/leffj/Dropbox/nutnet/NutNet_microbe_nutrient/beta_div/sqrt_bray_curtis_otu_table_unite75_wTax_485.txt'
fung_data = load_dm(fung_dm_fp, map_fp)
fung_diss = get_mean_dissimilarities(fung_data, comparison_cat="nutrient_trt", within_cat="site_code",
comparison_cat_val='Control__NP')
# load and process arch data
arch_dm_fp = '/Users/leffj/Dropbox/nutnet/NutNet_microbe_nutrient/beta_div/sqrt_bray_curtis_otu_table_k__Archaea_100.txt'
arch_data = load_dm(arch_dm_fp, map_fp)
arch_diss = get_mean_dissimilarities(arch_data, comparison_cat="nutrient_trt", within_cat="site_code",
comparison_cat_val='Control__NP')
# load and process veg data
veg_fp = '/Users/leffj/Dropbox/nutnet/NutNet_microbe_nutrient/drivers_of_response/divers\ of\ dissimilarity/veg_table.txt'
veg_data = load_taxon_table(veg_fp, map_fp)
veg_data$dm_loaded = calc_dm(veg_data$data_loaded)
veg_diss = get_mean_dissimilarities(veg_data, comparison_cat="nutrient_trt", within_cat="site_code",
comparison_cat_val='Control__NP')
# all data together and plot with facets
comp_data = data.frame(site = veg_diss$site_code_1,
Continent = veg_data$map_loaded$continent[
match(veg_diss$site_code_1, veg_data$map_loaded$site_code)],
veg_dissim = veg_diss$mean_dist,
fung_dissim = fung_diss$mean_dist[match(veg_diss$site_code_1, fung_diss$site_code_1)],
arch_dissim = arch_diss$mean_dist[match(veg_diss$site_code_1, arch_diss$site_code_1)],
bact_dissim = bact_diss$mean_dist[match(veg_diss$site_code_1, bact_diss$site_code_1)]
)
to_plot = melt(comp_data, id.vars=c('site', 'Continent', 'veg_dissim'),
variable_name='community_type',
value.name='dissim')
levels(to_plot$community_type) = c('Fungi', 'Archaea', 'Bacteria')
ggplot(to_plot, aes(veg_dissim, value, color=Continent)) +
facet_wrap(~ community_type, scales="free_y") +
stat_smooth(method=lm, color='black') +
geom_point(size=3) +
ylab('Microbial community composition change') +
xlab('Plant community composition change') +
theme_bw() +
theme(legend.key = element_blank(), panel.grid = element_blank())
envir_fp = '/Users/leffj/Dropbox/NutNet/NutNet_microbe_nutrient/metadata_sampling_year_noNN10_bySite.txt'
envir_data = read.table(envir_fp, header=TRUE, sep='\t', check.names=FALSE, comment.char='')
envir_data = envir_data[match(comp_data$site, envir_data$site), ]
# convert all to numeric
envir_data_vals = sapply(envir_data[ ,2:ncol(envir_data)], function(x) {as.numeric(as.character(x))})
# tmp = as.data.frame(envir_data_vals)
# hist(log(tmp$MAT_RANGE))
envir_data_vals = mutate(as.data.frame(envir_data_vals),
sq_MAT_RANGE = (MAT_RANGE)^2,
sq_PET = (PET)^2,
ln_live_mass = log(live_mass),
sq_Ambient_PAR = (Ambient_PAR)^2,
ln_soil_pctC = log(soil_pctC),
ln_soil_pctN = log(soil_pctN),
ln_soil_ppmP = log(soil_ppmP),
ln_pct_dif_C_wNP = log(pct_dif_C_wNP-min(pct_dif_C_wNP, na.rm=T)+0.0001),
ln_pct_dif_N_wNP = log(pct_dif_N_wNP-min(pct_dif_N_wNP, na.rm=T)+0.0001),
ln_pct_dif_P_wNP = log(pct_dif_P_wNP-min(pct_dif_P_wNP, na.rm=T)+0.0001),
ln_pct_dif_LB_wNP = log(pct_dif_LB_wNP-min(pct_dif_LB_wNP, na.rm=T)+0.0001)
)
View(envir_data_vals)
View(comp_data)
library(ggplot2)
# bacteria
data_fp = '/Users/leffj/Dropbox/NutNet/NutNet_microbe_nutrient/drivers_of_response/bact_pct_chg.csv'
# archaea
data_fp = '/Users/leffj/Dropbox/NutNet/NutNet_microbe_nutrient/drivers_of_response/arch_pct_chg.csv'
# fungi
data_fp = '/Users/leffj/Dropbox/NutNet/NutNet_microbe_nutrient/drivers_of_response/fung_pct_chg.csv'
data = read.csv(data_fp,check.names=F)
map_fp = '/Users/leffj/Dropbox/NutNet/NutNet_microbe_diversity/metadata_controls_sampling_year_noNN10.csv'
map = read.csv(file=map_fp,header=T,row.names=1,check.names=F)
map$MAT_RANGE
hist(map$MAT_RANGE)
hist(map$MAT_RANGE^2)
map.bySite = ddply(map,.(site_code,continent),summarize,lnlive_mass=log(mean(live_mass)+1),
lntotal_mass=log(mean(total_mass)+1),MAP=mean(MAP),MAT=mean(MAT),
MAP_VAR=mean(MAP_VAR),TEMP_VAR=mean(TEMP_VAR),lnsoil_pctN=log(mean(soil_pctN,na.rm=T)+1),
lnsoil_ppmP=log(mean(soil_ppmP,na.rm=T)+1),soil_pH=mean(soil_pH,na.rm=T),
PercentSand=mean(PercentSand,na.rm=T),yrsTrt=mean(year_trt,na.rm=T),
sq_MAT_RANGE = mean(MAT_RANGE^2))
data.full = cbind(data,map.bySite[match(data$Site,map.bySite$site_code),])
# go through each taxon and look at correlations with each environmental variable
taxa = unique(data.full$Category)
output = data.frame()
for(i in 1:length(taxa)){
print(as.character(taxa[i]))
data.tmp = data.full[data.full$Category==taxa[i],]
data.tmp = data.tmp[is.finite(data.tmp$value),]
for(k in 6:ncol(data.tmp)){
print(paste(' ',names(data.tmp)[k]))
rslts = cor.test(data.tmp[,k],data.tmp$value,method='pearson')
print(paste('  rho:',round(rslts$estimate,3),'p:',round(rslts$p.value,3)))
out.tmp = data.frame(taxon=as.character(taxa[i]),variable=names(data.tmp)[k],
rho=rslts$estimate,p=rslts$p.value)
output = rbind(output,out.tmp)
}
}
View(output)
source('~/software/micro_community_analysis_tools/routine_analysis_functions.R')
######################################
# get mean dissim b/t each nutrient  #
#   treated sample and control plots #
#   within a site                    #
######################################
map_fp = '/Users/leffj/Dropbox/NutNet/NutNet_microbe_nutrient/metadata_sampling_year_noNN10.txt'
# load and process bact data
bact_dm_fp = '/Users/leffj/Dropbox/nutnet/NutNet_microbe_nutrient/beta_div/sqrt_bray_curtis_otu_table_k__Bacteria_18000.txt'
bact_data = load_dm(bact_dm_fp, map_fp)
bact_diss = get_mean_dissimilarities(bact_data, comparison_cat="nutrient_trt", within_cat="site_code",
comparison_cat_val='Control__NP')
# load and process fung data
fung_dm_fp = '/Users/leffj/Dropbox/nutnet/NutNet_microbe_nutrient/beta_div/sqrt_bray_curtis_otu_table_unite75_wTax_485.txt'
fung_data = load_dm(fung_dm_fp, map_fp)
fung_diss = get_mean_dissimilarities(fung_data, comparison_cat="nutrient_trt", within_cat="site_code",
comparison_cat_val='Control__NP')
# load and process arch data
arch_dm_fp = '/Users/leffj/Dropbox/nutnet/NutNet_microbe_nutrient/beta_div/sqrt_bray_curtis_otu_table_k__Archaea_100.txt'
arch_data = load_dm(arch_dm_fp, map_fp)
arch_diss = get_mean_dissimilarities(arch_data, comparison_cat="nutrient_trt", within_cat="site_code",
comparison_cat_val='Control__NP')
# load and process veg data
veg_fp = '/Users/leffj/Dropbox/nutnet/NutNet_microbe_nutrient/drivers_of_response/divers\ of\ dissimilarity/veg_table.txt'
veg_data = load_taxon_table(veg_fp, map_fp)
veg_data$dm_loaded = calc_dm(veg_data$data_loaded)
veg_diss = get_mean_dissimilarities(veg_data, comparison_cat="nutrient_trt", within_cat="site_code",
comparison_cat_val='Control__NP')
# all data together and plot with facets
comp_data = data.frame(site = veg_diss$site_code_1,
Continent = veg_data$map_loaded$continent[
match(veg_diss$site_code_1, veg_data$map_loaded$site_code)],
veg_dissim = veg_diss$mean_dist,
fung_dissim = fung_diss$mean_dist[match(veg_diss$site_code_1, fung_diss$site_code_1)],
arch_dissim = arch_diss$mean_dist[match(veg_diss$site_code_1, arch_diss$site_code_1)],
bact_dissim = bact_diss$mean_dist[match(veg_diss$site_code_1, bact_diss$site_code_1)]
)
envir_fp = '/Users/leffj/Dropbox/NutNet/NutNet_microbe_nutrient/metadata_sampling_year_noNN10_bySite.txt'
envir_data = read.table(envir_fp, header=TRUE, sep='\t', check.names=FALSE, comment.char='')
envir_bySite = ddply(envir_data,.(site_code,continent),summarize,lnlive_mass=log(mean(live_mass)+1),
lntotal_mass=log(mean(total_mass)+1),MAP=mean(MAP),MAT=mean(MAT),
MAP_VAR=mean(MAP_VAR),TEMP_VAR=mean(TEMP_VAR),lnsoil_pctN=log(mean(soil_pctN,na.rm=T)+1),
lnsoil_ppmP=log(mean(soil_ppmP,na.rm=T)+1),soil_pH=mean(soil_pH,na.rm=T),
PercentSand=mean(PercentSand,na.rm=T),yrsTrt=mean(year_trt,na.rm=T),
sq_MAT_RANGE = mean(MAT_RANGE^2))
envir_data
envir_fp = '/Users/leffj/Dropbox/NutNet/NutNet_microbe_nutrient/metadata_sampling_year_noNN10.txt'
envir_data = read.table(envir_fp, header=TRUE, sep='\t', check.names=FALSE, comment.char='')
envir_bySite = ddply(envir_data,.(site_code,continent),summarize,lnlive_mass=log(mean(live_mass)+1),
lntotal_mass=log(mean(total_mass)+1),MAP=mean(MAP),MAT=mean(MAT),
MAP_VAR=mean(MAP_VAR),TEMP_VAR=mean(TEMP_VAR),lnsoil_pctN=log(mean(soil_pctN,na.rm=T)+1),
lnsoil_ppmP=log(mean(soil_ppmP,na.rm=T)+1),soil_pH=mean(soil_pH,na.rm=T),
PercentSand=mean(PercentSand,na.rm=T),yrsTrt=mean(year_trt,na.rm=T),
sq_MAT_RANGE = mean(MAT_RANGE^2))
View(envir_bySite)
map_fp = '/Users/leffj/Dropbox/NutNet/NutNet_microbe_diversity/metadata_controls_sampling_year_noNN10.csv'
map = read.csv(file=map_fp,header=T,row.names=1,check.names=F)
map.bySite = ddply(map,.(site_code,continent),summarize,lnlive_mass=log(mean(live_mass)+1),
lntotal_mass=log(mean(total_mass)+1),MAP=mean(MAP),MAT=mean(MAT),
MAP_VAR=mean(MAP_VAR),TEMP_VAR=mean(TEMP_VAR),lnsoil_pctN=log(mean(soil_pctN,na.rm=T)+1),
lnsoil_ppmP=log(mean(soil_ppmP,na.rm=T)+1),soil_pH=mean(soil_pH,na.rm=T),
PercentSand=mean(PercentSand,na.rm=T),yrsTrt=mean(year_trt,na.rm=T),
sq_MAT_RANGE = mean(MAT_RANGE^2))
View(map.bySite)
envir_fp = '/Users/leffj/Dropbox/NutNet/NutNet_microbe_diversity/metadata_controls_sampling_year_noNN10.csv'
envir_data = read.csv(envir_fp, header=TRUE, check.names=FALSE, comment.char='')
envir_bySite = ddply(envir_data,.(site_code,continent),summarize,lnlive_mass=log(mean(live_mass)+1),
lntotal_mass=log(mean(total_mass)+1),MAP=mean(MAP),MAT=mean(MAT),
MAP_VAR=mean(MAP_VAR),TEMP_VAR=mean(TEMP_VAR),lnsoil_pctN=log(mean(soil_pctN,na.rm=T)+1),
lnsoil_ppmP=log(mean(soil_ppmP,na.rm=T)+1),soil_pH=mean(soil_pH,na.rm=T),
PercentSand=mean(PercentSand,na.rm=T),yrsTrt=mean(year_trt,na.rm=T),
sq_MAT_RANGE = mean(MAT_RANGE^2))
View(envir_bySite)
View(envir_bySite)
envir_data[match(comp_data$site, envir_data$site), ]
envir_data$site
envir_data[match(comp_data$site, envir_data$site_code), ]
envir_bySite = ddply(envir_data,.(site_code,continent),summarize,lnlive_mass=log(mean(live_mass)+1),
lntotal_mass=log(mean(total_mass)+1),MAP=mean(MAP),MAT=mean(MAT),
MAP_VAR=mean(MAP_VAR),TEMP_VAR=mean(TEMP_VAR),lnsoil_pctN=log(mean(soil_pctN,na.rm=T)+1),
lnsoil_ppmP=log(mean(soil_ppmP,na.rm=T)+1),soil_pH=mean(soil_pH,na.rm=T),
PercentSand=mean(PercentSand,na.rm=T),yrsTrt=mean(year_trt,na.rm=T),
sq_MAT_RANGE = mean(MAT_RANGE^2))
envir_bySite[match(comp_data$site, envir_bySite$site_code), ]
envir_bySite = envir_bySite[match(comp_data$site, envir_bySite$site_code), ]
envir_data_vals = sapply(envir_bySite[ ,3:ncol(envir_bySite)], function(x) {as.numeric(as.character(x))})
envir_data_vals
results_df = NULL
for(i in 3:ncol(comp_data)){
c_type = names(comp_data)[i]
rvals = c()
pvals = c()
for(k in 1:ncol(envir_data_vals)){
envir_var = names(envir_data_vals)[k]
tr = cor.test(comp_data[ ,i], envir_data_vals[, k])
rvals = c(rvals, tr$estimate)
pvals = c(pvals, tr$p.value)
}
tmp_df = data.frame(
community_type = rep(c_type, ncol(envir_data_vals)),
environmental_factor = colnames(envir_data_vals),
r = rvals,
p = pvals)
results_df = rbind(results_df, tmp_df)
}
View(results_df)
outfp = '/Users/leffj/Dropbox/nutnet/NutNet_microbe_nutrient/drivers_of_response/divers\ of\ dissimilarity/correlations.csv'
write.csv(results_df, outfp)
cbind(comp_data, envir_data_vals)
all_data = cbind(comp_data, envir_data_vals)
View(all_data)
names(all_data)
step(lm(fung_dissim ~ veg_dissim + lnlive_mass + lntotal_mass,MAP + MAT +
MAP_VAR + TEMP_VAR + lnsoil_pctN + lnsoil_ppmP + soil_pH +
PercentSand + yrsTrt + sq_MAT_RANGE, data=all_data), direction='backward')
step(lm(fung_dissim ~ veg_dissim + lnlive_mass + lntotal_mass,MAP + MAT +
MAP_VAR + TEMP_VAR + lnsoil_pctN + lnsoil_ppmP + soil_pH +
PercentSand + yrsTrt + sq_MAT_RANGE, data=all_data, na.action=remove), direction='backward')
step(lm(fung_dissim ~ veg_dissim + lnlive_mass + lntotal_mass,MAP + MAT +
MAP_VAR + TEMP_VAR + lnsoil_pctN + lnsoil_ppmP + soil_pH +
PercentSand + yrsTrt + sq_MAT_RANGE, data=all_data, na.action='remove'),
direction='backward')
step(lm(fung_dissim ~ veg_dissim + lnlive_mass + lntotal_mass,MAP + MAT +
MAP_VAR + TEMP_VAR + lnsoil_pctN + lnsoil_ppmP + soil_pH +
PercentSand + yrsTrt + sq_MAT_RANGE, data=all_data, na.action='na.remove'),
direction='backward')
step(lm(fung_dissim ~ veg_dissim + lnlive_mass + lntotal_mass,MAP + MAT +
MAP_VAR + TEMP_VAR + lnsoil_pctN + lnsoil_ppmP + soil_pH +
PercentSand + yrsTrt + sq_MAT_RANGE, data=all_data, na.action=na.remove),
direction='backward')
step(lm(fung_dissim ~ veg_dissim + lnlive_mass + lntotal_mass,MAP + MAT +
MAP_VAR + TEMP_VAR + lnsoil_pctN + lnsoil_ppmP + soil_pH +
PercentSand + yrsTrt + sq_MAT_RANGE, data=all_data, na.action=na.omit),
direction='backward')
all_data
na.exclude(all_data)
step(lm(fung_dissim ~ veg_dissim + lnlive_mass + lntotal_mass,MAP + MAT +
MAP_VAR + TEMP_VAR + lnsoil_pctN + lnsoil_ppmP + soil_pH +
PercentSand + yrsTrt + sq_MAT_RANGE, data=all_data, na.action=na.exclude()),
direction='backward')
step(object=lm(fung_dissim ~ veg_dissim + lnlive_mass + lntotal_mass,MAP + MAT +
MAP_VAR + TEMP_VAR + lnsoil_pctN + lnsoil_ppmP + soil_pH +
PercentSand + yrsTrt + sq_MAT_RANGE, data=all_data, na.action=na.exclude()),
direction='backward')
step(lm(fung_dissim ~ veg_dissim + lnlive_mass + lntotal_mass,MAP + MAT +
MAP_VAR + TEMP_VAR + lnsoil_pctN + lnsoil_ppmP + soil_pH +
PercentSand + yrsTrt + sq_MAT_RANGE, data=all_data, na.action=na.exclude),
direction='backward')
all_data_noNAs = na.exclude(all_data)
View(all_data_noNAs)
step(lm(fung_dissim ~ veg_dissim + lnlive_mass + lntotal_mass,MAP + MAT +
MAP_VAR + TEMP_VAR + lnsoil_pctN + lnsoil_ppmP + soil_pH +
PercentSand + yrsTrt + sq_MAT_RANGE, data=all_data_noNAs),
direction='backward')
lm(fung_dissim ~ veg_dissim + lnlive_mass, data=all_data_noNAs)
lm(fung_dissim ~ veg_dissim + lnlive_mass, data=all_data)
step(lm(fung_dissim ~ veg_dissim + lnlive_mass + lntotal_mass + MAP + MAT +
MAP_VAR + TEMP_VAR + lnsoil_pctN + lnsoil_ppmP + soil_pH +
PercentSand + yrsTrt + sq_MAT_RANGE, data=all_data_noNAs),
direction='backward')
lm(fung_dissim ~ veg_dissim + lnlive_mass + MAP + MAT + MAP_VAR +
TEMP_VAR + lnsoil_pctN + lnsoil_ppmP + soil_pH, data=all_data)
step(lm(fung_dissim ~ veg_dissim + lnlive_mass + MAP + MAT + MAP_VAR +
TEMP_VAR + lnsoil_pctN + lnsoil_ppmP + soil_pH, data=all_data),
direction='backward')
step(lm(fung_dissim ~ veg_dissim + lnlive_mass + MAP + MAT + MAP_VAR +
TEMP_VAR + lnsoil_pctN + lnsoil_ppmP + soil_pH, data=all_data, na.action=na.exclude,
direction='backward')
)
step(lm(fung_dissim ~ veg_dissim + lnlive_mass + MAP + MAT + MAP_VAR +
TEMP_VAR + lnsoil_pctN + lnsoil_ppmP + soil_pH, data=all_data, na.action=na.exclude),
direction='backward')
step(lm(fung_dissim ~ veg_dissim + lnlive_mass + MAP + MAT + MAP_VAR +
TEMP_VAR + lnsoil_pctN + lnsoil_ppmP + soil_pH, data=all_data_noNAs),
direction='backward')
step(lm(fung_dissim ~ veg_dissim + lnlive_mass + MAP + MAT + MAP_VAR +
TEMP_VAR + lnsoil_pctN + lnsoil_ppmP + soil_pH + sq_MAT_RANGE,
data=all_data_noNAs),
direction='backward')
step(lm(fung_dissim ~ veg_dissim + lnlive_mass + MAP + MAT + MAP_VAR +
TEMP_VAR + lnsoil_pctN + lnsoil_ppmP + soil_pH ,
data=all_data_noNAs),
direction='backward')
step(lm(fung_dissim ~ veg_dissim + lnlive_mass + MAP + MAT + MAP_VAR +
TEMP_VAR + lnsoil_pctN + lnsoil_ppmP + soil_pH + sq_MAT_RANGE,
data=all_data_noNAs),
direction='forward')
step(lm(fung_dissim ~ veg_dissim + lnlive_mass + MAP + MAT + MAP_VAR +
TEMP_VAR + lnsoil_pctN + lnsoil_ppmP + soil_pH,
data=all_data_noNAs),
direction='forward')
step(lm(fung_dissim ~ veg_dissim + lnlive_mass + MAP + MAT + MAP_VAR +
TEMP_VAR + lnsoil_pctN + lnsoil_ppmP + soil_pH, data=all_data_noNAs),
direction='forward')
step(lm(fung_dissim ~ veg_dissim + lnlive_mass + MAP + MAT + MAP_VAR +
TEMP_VAR + lnsoil_pctN + lnsoil_ppmP + soil_pH + sq_MAT_RANGE,
data=all_data_noNAs),
direction='stepwise')
step(lm(fung_dissim ~ veg_dissim + lnlive_mass + MAP + MAT + MAP_VAR +
TEMP_VAR + lnsoil_pctN + lnsoil_ppmP + soil_pH + sq_MAT_RANGE,
data=all_data_noNAs),
direction='both')
envir_bySite = ddply(envir_data,.(site_code,continent),summarize,lnlive_mass=log(mean(live_mass)+1),
lntotal_mass=log(mean(total_mass)+1),MAP=mean(MAP),MAT=mean(MAT),
MAP_VAR=mean(MAP_VAR),TEMP_VAR=mean(TEMP_VAR),lnsoil_pctN=log(mean(soil_pctN,na.rm=T)+1),
lnsoil_ppmP=log(mean(soil_ppmP,na.rm=T)+1),soil_pH=mean(soil_pH,na.rm=T),
sq_MAT_RANGE = mean(MAT_RANGE^2),
PercentSand=mean(PercentSand,na.rm=T),yrsTrt=mean(year_trt,na.rm=T))
envir_bySite = envir_bySite[match(comp_data$site, envir_bySite$site_code), ]
# convert all to numeric
envir_data_vals = sapply(envir_bySite[ ,3:ncol(envir_bySite)], function(x) {as.numeric(as.character(x))})
all_data = cbind(comp_data, envir_data_vals)
all_data_noNAs = na.exclude(all_data$[, c(3,4,7:16)])
c(3,4,7:16)
all_data_noNAs = na.exclude(all_data[, c(3,4,7:16)])
View(all_data_noNAs)
step(lm(fung_dissim ~ veg_dissim + lnlive_mass + MAP + MAT + MAP_VAR +
TEMP_VAR + lnsoil_pctN + lnsoil_ppmP + soil_pH + sq_MAT_RANGE,
data=all_data_noNAs),
direction='both')
step(lm(fung_dissim ~ veg_dissim + lnlive_mass + MAP + MAT + MAP_VAR +
TEMP_VAR + lnsoil_pctN + lnsoil_ppmP + soil_pH + sq_MAT_RANGE,
data=all_data_noNAs),
direction='backward')
m = step(lm(fung_dissim ~ veg_dissim + lnlive_mass + MAP + MAT + MAP_VAR +
TEMP_VAR + lnsoil_pctN + lnsoil_ppmP + soil_pH + sq_MAT_RANGE,
data=all_data_noNAs),
direction='both')
m
summary(m)
all_data_noNAs = na.exclude(all_data[, c(3,4,6,7:16)])
m_fung = step(lm(fung_dissim ~ veg_dissim + lnlive_mass + MAP + MAT + MAP_VAR +
TEMP_VAR + lnsoil_pctN + lnsoil_ppmP + soil_pH + sq_MAT_RANGE,
data=all_data_noNAs),
direction='both')
summary(m)
summary(m_fung)
m_fung = step(lm(fung_dissim ~ lnlive_mass + MAP + MAT + MAP_VAR +
TEMP_VAR + lnsoil_pctN + lnsoil_ppmP + soil_pH + sq_MAT_RANGE,
data=all_data_noNAs),
direction='both')
summary(m_fung)
all_data_noNAs = na.exclude(all_data[, c(4,6,7:16)])
#fung
m_fung = step(lm(fung_dissim ~ lnlive_mass + MAP + MAT + MAP_VAR +
TEMP_VAR + lnsoil_pctN + lnsoil_ppmP + soil_pH + sq_MAT_RANGE,
data=all_data_noNAs),
direction='both')
summary(m_fung)
m_fung = step(lm(fung_dissim ~ MAP + MAT + MAP_VAR +
TEMP_VAR + lnsoil_pctN + lnsoil_ppmP + soil_pH + sq_MAT_RANGE,
data=all_data_noNAs),
direction='both')
summary(m_fung)
m_fung = step(lm(fung_dissim ~ MAP + MAT + MAP_VAR +
TEMP_VAR + lnsoil_pctN + lnsoil_ppmP + sq_MAT_RANGE,
data=all_data_noNAs),
direction='both')
summary(m_fung)
View(envir_data)
m_bact = step(lm(fung_dissim ~ MAP + MAT + MAP_VAR +
TEMP_VAR + lnsoil_pctN + lnsoil_ppmP + soil_pH + sq_MAT_RANGE,
data=all_data_noNAs),
direction='both')
summary(m_bact)
m_bact = step(lm(fung_dissim ~ MAP + MAT + MAP_VAR +
TEMP_VAR + lnsoil_pctN + lnsoil_ppmP + sq_MAT_RANGE,
data=all_data_noNAs),
direction='both')
summary(m_bact)
summary(m_fung)
m_bact = step(lm(bact_dissim ~ MAP + MAT + MAP_VAR +
TEMP_VAR + lnsoil_pctN + lnsoil_ppmP + sq_MAT_RANGE,
data=all_data_noNAs),
direction='both')
summary(m_bact)
plot(all_data_noNAs$TEMP_VAR, all_data_noNAs$sq_MAT_RANGE)
cor.test(all_data_noNAs$TEMP_VAR, all_data_noNAs$sq_MAT_RANGE)
m_bact = step(lm(bact_dissim ~ lnLive_mass + MAP + MAT + MAP_VAR +
TEMP_VAR + lnsoil_pctN + lnsoil_ppmP + sq_MAT_RANGE,
data=all_data_noNAs),
direction='both')
m_bact = step(lm(bact_dissim ~ lnlive_mass + MAP + MAT + MAP_VAR +
TEMP_VAR + lnsoil_pctN + lnsoil_ppmP + sq_MAT_RANGE,
data=all_data_noNAs),
direction='both')
summary(m_bact)
m_fung = step(lm(fung_dissim ~ lnlive_mass + MAP + MAT + MAP_VAR +
TEMP_VAR + lnsoil_pctN + lnsoil_ppmP + sq_MAT_RANGE,
data=all_data_noNAs),
direction='both')
summary(m_fung)
m_bact = step(lm(bact_dissim ~ veg_dissim + lnlive_mass + MAP + MAT + MAP_VAR +
TEMP_VAR + lnsoil_pctN + lnsoil_ppmP + sq_MAT_RANGE,
data=all_data_noNAs),
direction='both')
all_data_noNAs = na.exclude(all_data[, c(3, 4,6,7:16)])
#fung
m_fung = step(lm(fung_dissim ~ lnlive_mass + MAP + MAT + MAP_VAR +
TEMP_VAR + lnsoil_pctN + lnsoil_ppmP + sq_MAT_RANGE,
data=all_data_noNAs),
direction='both')
summary(m_fung)
#bact
m_bact = step(lm(bact_dissim ~ veg_dissim + lnlive_mass + MAP + MAT + MAP_VAR +
TEMP_VAR + lnsoil_pctN + lnsoil_ppmP + sq_MAT_RANGE,
data=all_data_noNAs),
direction='both')
summary(m_bact)
summary(m_fung)
